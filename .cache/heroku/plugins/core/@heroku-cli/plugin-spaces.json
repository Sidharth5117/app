{
  "invalidate": "6.99.0-ec9edad/2.12.2",
  "manifest": {
    "commands": [
      {
        "id": "spaces",
        "_version": "12.1.1",
        "description": "list available spaces",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces \u001b[34m[flags]\u001b[39m\n\n\u001b[1mlist available spaces\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -o, --org ORG    \u001b[2mteam to use\u001b[22m\n -t, --team TEAM  \u001b[2mteam to use\u001b[22m\n --json           \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "spaces",
          "\u001b[2mlist available spaces\u001b[22m"
        ]
      },
      {
        "id": "spaces:create",
        "_version": "12.1.1",
        "description": "create a new space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:create [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mcreate a new space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -o, --org ORG      \u001b[2mteam to use\u001b[22m\n -s, --space SPACE  \u001b[2mname of space to create\u001b[22m\n -t, --team TEAM    \u001b[2mteam to use\u001b[22m\n --region REGION    \u001b[2mregion name\u001b[22m\n\nExample:\n\n    $ heroku spaces:create --space my-space --team my-team --region oregon\n    Creating space my-space in team my-team... done\n    === my-space\n    ID:         e7b99e37-69b3-4475-ad47-a5cc5d75fd9f\n    Team:       my-team\n    Region:     oregon\n    State:      allocating\n    Created at: 2016-01-06T03:23:13Z\n",
        "helpLine": [
          "spaces:create [SPACE]",
          "\u001b[2mcreate a new space\u001b[22m"
        ]
      },
      {
        "id": "spaces:destroy",
        "_version": "12.1.1",
        "description": "destroy a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:destroy [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mdestroy a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to destroy\u001b[22m\n --confirm CONFIRM  \u001b[2mset to space name to bypass confirm prompt\u001b[22m\n\nExample:\n\n    $ heroku spaces:destroy --space my-space\n    Destroying my-space... done\n",
        "helpLine": [
          "spaces:destroy [SPACE]",
          "\u001b[2mdestroy a space\u001b[22m"
        ]
      },
      {
        "id": "spaces:info",
        "_version": "12.1.1",
        "description": "show info about a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:info [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mshow info about a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get info of\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "spaces:info [SPACE]",
          "\u001b[2mshow info about a space\u001b[22m"
        ]
      },
      {
        "id": "spaces:rename",
        "_version": "12.1.1",
        "description": "renames a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:rename \u001b[34m[flags]\u001b[39m\n\n\u001b[1mrenames a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n --from FROM  \u001b[2mcurrent name of space\u001b[22m\n --to TO      \u001b[2mdesired name of space\u001b[22m\n\nExample:\n\n    $ heroku spaces:rename --from old-space-name --to new-space-name\n    Renaming space old-space-name to new-space-name... done\n",
        "helpLine": [
          "spaces:rename",
          "\u001b[2mrenames a space\u001b[22m"
        ]
      },
      {
        "id": "spaces:wait",
        "_version": "12.1.1",
        "description": "wait for a space to be created",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:wait [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mwait for a space to be created\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -i, --interval INTERVAL  \u001b[2mseconds to wait between poll intervals\u001b[22m\n -s, --space SPACE        \u001b[2mspace to get info of\u001b[22m\n -t, --timeout TIMEOUT    \u001b[2mmaximum number of seconds to wait\u001b[22m\n --json                   \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "spaces:wait [SPACE]",
          "\u001b[2mwait for a space to be created\u001b[22m"
        ]
      },
      {
        "id": "spaces:peering:info",
        "_version": "12.1.1",
        "description": "display the information necessary to initiate a peering connection",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:peering:info [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mdisplay the information necessary to initiate a peering connection\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get peering info from\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n\nExample:\n\n    $ heroku spaces:peering:info example-space\n    === example-space Peering Info\n    AWS Account ID:    012345678910\n    AWS Region:        us-west-2\n    AWS VPC ID:        vpc-baadf00d\n    AWS VPC CIDR:      10.0.0.0/16\n    Dyno CIDRs:        10.0.128.0/20, 10.0.144.0/20\n    Unavailable CIDRs: 10.1.0.0/16\n\nYou will use the information provied by this command to establish a peering connection request from your AWS VPC to your private space.\n\nTo start the peering process, go into your AWS console for the VPC you would like peered with your Private Space,\nnavigate to the VPC service, choose the \"Peering Connections\" option and click the \"Create peering connection\" button.\n\n- The AWS Account ID and VPC ID are necessary for the AWS VPC Peering connection wizard.\n- You will also need to configure your VPC route table to route the Dyno CIDRs through the peering connection.\n\nOnce you've established the peering connection request, you can use the spaces:peerings:accept command to accept and\nconfigure the peering connection for the space.\n",
        "helpLine": [
          "spaces:peering:info [SPACE]",
          "\u001b[2mdisplay the information necessary to initiate a peering connection\u001b[22m"
        ]
      },
      {
        "id": "spaces:peerings",
        "_version": "12.1.1",
        "description": "list peering connections for a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:peerings [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mlist peering connections for a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get peer list from\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "spaces:peerings [SPACE]",
          "\u001b[2mlist peering connections for a space\u001b[22m"
        ]
      },
      {
        "id": "spaces:peerings:accept",
        "_version": "12.1.1",
        "description": "accepts a pending peering request for a private space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:peerings:accept [PCXID] \u001b[34m[flags]\u001b[39m\n\n\u001b[1maccepts a pending peering request for a private space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -p, --pcxid PCXID  \u001b[2mPCX ID of a pending peering\u001b[22m\n -s, --space SPACE  \u001b[2mspace to get peering info from\u001b[22m\n\nExample:\n\n    $ heroku spaces:peerings:accept pcx-4bd27022 --space example-space\n    Accepting and configuring peering connection pcx-4bd27022\n",
        "helpLine": [
          "spaces:peerings:accept [PCXID]",
          "\u001b[2maccepts a pending peering request for a private space\u001b[22m"
        ]
      },
      {
        "id": "spaces:peerings:destroy",
        "_version": "12.1.1",
        "description": "destroys an active peering connection in a private space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:peerings:destroy [PCXID] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mdestroys an active peering connection in a private space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -p, --pcxid PCXID  \u001b[2mPCX ID of a pending peering\u001b[22m\n -s, --space SPACE  \u001b[2mspace to get peering info from\u001b[22m\n --confirm CONFIRM  \u001b[2mset to PCX ID to bypass confirm prompt\u001b[22m\n\nExample:\n\n    $ heroku spaces:peerings:destroy pcx-4bd27022 --confirm pcx-4bd27022 --space example-space\n    Tearing down peering connection pcx-4bd27022\n",
        "helpLine": [
          "spaces:peerings:destroy [PCXID]",
          "\u001b[2mdestroys an active peering connection in a private space\u001b[22m"
        ]
      },
      {
        "id": "spaces:vpn:create",
        "_version": "12.1.1",
        "description": "create VPN",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": true,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:vpn:create [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mcreate VPN\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -c, --cidrs CIDRS  \u001b[2ma list of routable CIDRs separated by commas\u001b[22m\n -i, --ip IP        \u001b[2mpublic IP of customer gateway\u001b[22m\n -s, --space SPACE  \u001b[2mspace name\u001b[22m\n\nExample:\n\n    $ heroku spaces:vpn:create --ip 35.161.69.30 --cidrs 172.16.0.0/16,10.0.0.0/24 --space my-space\n    Creating VPN in space my-space... done\n    ▸    Use spaces:vpn:wait to track allocation.\n",
        "helpLine": [
          "spaces:vpn:create [SPACE]",
          "\u001b[2mcreate VPN\u001b[22m"
        ]
      },
      {
        "id": "spaces:vpn:info",
        "_version": "12.1.1",
        "description": "display the information for VPN",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": true,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:vpn:info [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mdisplay the information for VPN\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get VPN info from\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n\nExample:\n\n    $ heroku spaces:vpn:info my-space\n    === my-space VPN Info\n    ID:             123456789012\n    Public IP:      35.161.69.30\n    Routable CIDRs: 172.16.0.0/16\n    State:          available\n    === my-space Tunnel Info\n    VPN Tunnel  IP Address     Status  Status Last Changed   Details\n    ──────────  ─────────────  ──────  ────────────────────  ──────────────\n    Tunnel 1    52.44.146.197  UP      2016-10-25T22:09:05Z  status message\n    Tunnel 2    52.44.146.197  UP      2016-10-25T22:09:05Z  status message\n",
        "helpLine": [
          "spaces:vpn:info [SPACE]",
          "\u001b[2mdisplay the information for VPN\u001b[22m"
        ]
      },
      {
        "id": "spaces:vpn:config",
        "_version": "12.1.1",
        "description": "display the configuration information for VPN",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": true,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:vpn:config [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mdisplay the configuration information for VPN\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get VPN config from\u001b[22m\n\nExample:\n\n    $ heroku spaces:vpn:config my-space\n",
        "helpLine": [
          "spaces:vpn:config [SPACE]",
          "\u001b[2mdisplay the configuration information for VPN\u001b[22m"
        ]
      },
      {
        "id": "spaces:vpn:wait",
        "_version": "12.1.1",
        "description": "wait for VPN to be created",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": true,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:vpn:wait [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mwait for VPN to be created\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -i, --interval INTERVAL  \u001b[2mseconds to wait between poll intervals\u001b[22m\n -s, --space SPACE        \u001b[2mspace to wait for VPN from\u001b[22m\n -t, --timeout TIMEOUT    \u001b[2mmaximum number of seconds to wait\u001b[22m\n --json                   \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "spaces:vpn:wait [SPACE]",
          "\u001b[2mwait for VPN to be created\u001b[22m"
        ]
      },
      {
        "id": "spaces:vpn:destroy",
        "_version": "12.1.1",
        "description": "destroys VPN in a private space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": true,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:vpn:destroy [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mdestroys VPN in a private space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get peering info from\u001b[22m\n --confirm CONFIRM  \u001b[2mset to space name bypass confirm prompt\u001b[22m\n\nExample:\n\n    $ heroku spaces:vpn:destroy --confirm --space my-space\n    Tearing down VPN in space my-space\n",
        "helpLine": [
          "spaces:vpn:destroy [SPACE]",
          "\u001b[2mdestroys VPN in a private space\u001b[22m"
        ]
      },
      {
        "id": "spaces:ps",
        "_version": "12.1.1",
        "description": "list dynos for a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:ps [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mlist dynos for a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get dynos of\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "spaces:ps [SPACE]",
          "\u001b[2mlist dynos for a space\u001b[22m"
        ]
      },
      {
        "id": "spaces:topology",
        "_version": "12.1.1",
        "description": "show space topology",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku spaces:topology [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mshow space topology\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get topology of\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "spaces:topology [SPACE]",
          "\u001b[2mshow space topology\u001b[22m"
        ]
      },
      {
        "id": "drains:get",
        "_version": "12.1.1",
        "description": "display the log drain for a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": true,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku drains:get \u001b[34m[flags]\u001b[39m\n\n\u001b[1mdisplay the log drain for a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace for which to get log drain\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n",
        "helpLine": [
          "drains:get",
          "\u001b[2mdisplay the log drain for a space\u001b[22m"
        ]
      },
      {
        "id": "drains:set",
        "_version": "12.1.1",
        "description": "replaces the log drain for a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": true,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku drains:set URL \u001b[34m[flags]\u001b[39m\n\n\u001b[1mreplaces the log drain for a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace for which to set log drain\u001b[22m\n",
        "helpLine": [
          "drains:set URL",
          "\u001b[2mreplaces the log drain for a space\u001b[22m"
        ]
      },
      {
        "id": "trusted-ips",
        "_version": "12.1.1",
        "description": "list trusted IP ranges for a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku trusted-ips [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mlist trusted IP ranges for a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get inbound rules from\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n\nTrusted IP ranges are only available on Private Spaces.\n\nThe space name is a required parameter. Newly created spaces will have 0.0.0.0/0 set by default\nallowing all traffic to applications in the space. More than one CIDR block can be provided at\na time to the commands listed below. For example 1.2.3.4/20 and 5.6.7.8/20 can be added with:\n",
        "helpLine": [
          "trusted-ips [SPACE]",
          "\u001b[2mlist trusted IP ranges for a space\u001b[22m"
        ]
      },
      {
        "id": "trusted-ips:add",
        "_version": "12.1.1",
        "description": "Add one range to the list of trusted IP ranges",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku trusted-ips:add SOURCE \u001b[34m[flags]\u001b[39m\n\n\u001b[1mAdd one range to the list of trusted IP ranges\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to add rule to\u001b[22m\n --confirm CONFIRM  \u001b[2mset to space name to bypass confirm prompt\u001b[22m\n\nUses CIDR notation.\n\nExample:\n\n    $ heroku trusted-ips:add --space my-space 192.168.2.0/24\n    Added 192.168.0.1/24 to trusted IP ranges on my-space\n",
        "helpLine": [
          "trusted-ips:add SOURCE",
          "\u001b[2mAdd one range to the list of trusted IP ranges\u001b[22m"
        ]
      },
      {
        "id": "trusted-ips:remove",
        "_version": "12.1.1",
        "description": "Remove a range from the list of trusted IP ranges",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku trusted-ips:remove SOURCE \u001b[34m[flags]\u001b[39m\n\n\u001b[1mRemove a range from the list of trusted IP ranges\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n --confirm CONFIRM  \u001b[2mset to space name to bypass confirm prompt\u001b[22m\n --space SPACE      \u001b[2mspace to remove rule from\u001b[22m\n\nUses CIDR notation.\n\nExample:\n\n    $ heroku trusted-ips:remove --space my-space 192.168.2.0/24\n    Removed 192.168.2.0/24 from trusted IP ranges on my-space\n",
        "helpLine": [
          "trusted-ips:remove SOURCE",
          "\u001b[2mRemove a range from the list of trusted IP ranges\u001b[22m"
        ]
      },
      {
        "id": "outbound-rules",
        "_version": "12.1.1",
        "description": "list Outbound Rules for a space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku outbound-rules [SPACE] \u001b[34m[flags]\u001b[39m\n\n\u001b[1mlist Outbound Rules for a space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE  \u001b[2mspace to get outbound rules from\u001b[22m\n --json             \u001b[2moutput in json format\u001b[22m\n\nOutbound Rules are only available on Private Spaces.\n\nNewly created spaces will have an \"Allow All\" rule set by default\nallowing all egress dyno traffic outside of the space.  You can\nremove this default rule to completely stop your private dynos from\ntalking to the world.\n\nYou can add specific rules that only allow your dyno to communicate with trusted hosts.\n",
        "helpLine": [
          "outbound-rules [SPACE]",
          "\u001b[2mlist Outbound Rules for a space\u001b[22m"
        ]
      },
      {
        "id": "outbound-rules:add",
        "_version": "12.1.1",
        "description": "Add outbound rules to a Private Space",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku outbound-rules:add \u001b[34m[flags]\u001b[39m\n\n\u001b[1mAdd outbound rules to a Private Space\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n -s, --space SPACE    \u001b[2mspace to add rule to\u001b[22m\n --confirm CONFIRM    \u001b[2mset to space name to bypass confirm prompt\u001b[22m\n --dest DEST          \u001b[2mtarget CIDR block dynos are allowed to communicate with\u001b[22m\n --port PORT          \u001b[2mthe port dynos are allowed to use when communicating with hosts in destination CIDR block. Accepts a range in `<lowest port>-<highest port>` format. 0 is the minimum. The maximum port\n                      allowed is 65535, except for ICMP with a maximum of 255.\u001b[22m\n --protocol PROTOCOL  \u001b[2mthe protocol dynos are allowed to use when communicating with hosts in destination CIDR block. Valid protocols are \"tcp\", \"udp\", \"icmp\", \"0-255\" and \"any\".\u001b[22m\n\nThe destination flag uses CIDR notation.\n\n Example:\n\n    $ heroku outbound-rules:add --space my-space --dest 192.168.2.0/24 --protocol tcp --port 80\n    Added 192.168.0.1/24 to the outbound rules on my-space\n\n Example with port range:\n\n    $ heroku outbound-rules:add --space my-space --dest 192.168.2.0/24 --protocol tcp --port 80-100\n    Added 192.168.0.1/24 to the outbound rules on my-space\n\n Example opening up everything\n\n    $ heroku outbound-rules:add --space my-space --dest 0.0.0.0/0 --protocol any --port any\n    Added 0.0.0.0/0 to the outbound rules on my-space\n\nICMP Rules\nThe ICMP protocol has types, not ports, but the underlying systems treat them as the same. For this reason,\nwhen you want to allow ICMP traffic you will use the --port flag to specify the ICMP types you want to\nallow. ICMP types are numbered, 0-255.\n",
        "helpLine": [
          "outbound-rules:add",
          "\u001b[2mAdd outbound rules to a Private Space\u001b[22m"
        ]
      },
      {
        "id": "outbound-rules:remove",
        "_version": "12.1.1",
        "description": "Remove a Rules from the list of Outbound Rules",
        "plugin": {
          "name": "@heroku-cli/plugin-spaces",
          "version": "2.12.2"
        },
        "hidden": false,
        "aliases": [],
        "help": "\u001b[1mUsage:\u001b[22m heroku outbound-rules:remove RULENUMBER \u001b[34m[flags]\u001b[39m\n\n\u001b[1mRemove a Rules from the list of Outbound Rules\u001b[22m\n\n\u001b[34mFlags:\u001b[39m\n --confirm CONFIRM  \u001b[2mset to space name to bypass confirm prompt\u001b[22m\n --space SPACE      \u001b[2mspace to remove rule from\u001b[22m\n\nExample:\n\n    $ heroku outbound-rules:remove --space my-space 4\n    Removed 192.168.2.0/24 from trusted IP ranges on my-space\n",
        "helpLine": [
          "outbound-rules:remove RULENUMBER",
          "\u001b[2mRemove a Rules from the list of Outbound Rules\u001b[22m"
        ]
      }
    ],
    "topics": [
      {
        "name": "spaces",
        "description": "manage heroku private spaces"
      },
      {
        "name": "trusted-ips",
        "hidden": true
      }
    ]
  }
}
